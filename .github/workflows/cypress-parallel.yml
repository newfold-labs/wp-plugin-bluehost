name: Parallel Cypress Tests
on:
  push:
    branches:
      - main
      - master
      - trunk
      - develop
      - release/*
      - feature/*
      - add/*
      - update/*
      - fix/*
      - try/*
  pull_request:
    types: [opened, edited, reopened, ready_for_review]
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true
permissions:
  pull-requests: write

jobs:
  build:
    name: Build Plugin
    runs-on: ubuntu-24.04
    outputs:
      dist: ${{ steps.workflow.outputs.DIST }}
      package: ${{ steps.workflow.outputs.PACKAGE }}
    steps:

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup PHP
        uses: shivammathur/setup-php@9e72090525849c5e82e596468b86eb55e9cc5401 # v2.32.0
        with:
          php-version: '8.1'
          coverage: none
          tools: composer, cs2pr

      - name: Setup workflow context
        id: workflow
        working-directory: ${{ runner.temp }}
        env:
          REPO: ${{ github.repository }}
        run: |
          mkdir dist
          echo "DIST=${PWD}/dist" >> $GITHUB_OUTPUT
          echo "PACKAGE=${REPO##*/}" >> $GITHUB_OUTPUT

      - name: Use Node.js 20.x
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: 20.x

      - name: Get npm cache directory
        id: npm-cache
        run: echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT

      - name: Cache node modules
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer vendor directory
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Show versions
        run: |
          php --version
          composer --version
          node --version
          npm --version

      - name: Validate composer.json and composer.lock files
        run: composer validate

      - name: Install PHP Dependencies
        run: composer install --no-progress --no-dev --optimize-autoloader --prefer-dist

      - name: Install JS Dependencies
        run: npm install --legacy-peer-deps

      - name: Build JavaScript
        run: npm run build

      - name: Create Distribution Copy
        run: rsync -r --include-from=.distinclude --exclude-from=.distignore . ${{ steps.workflow.outputs.DIST }}/${{ steps.workflow.outputs.PACKAGE }}

      - name: List Distribution Files
        working-directory: ${{ steps.workflow.outputs.DIST }}
        run: find .

      - name: Upload distribution artifact
        uses: actions/upload-artifact@v4
        with:
          name: bluehost-wordpress-plugin
          path: ${{ steps.workflow.outputs.DIST }}

  test:
    name: Cypress Tests (${{ matrix.containers }})
    needs: build
    runs-on: ubuntu-24.04
    timeout-minutes: 20
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving Cypress Cloud hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run 4 parallel containers to speed up the tests
        # https://docs.cypress.io/guides/guides/parallelization#Parallelization
        containers: [1, 2, 3, 4]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      - name: Install JS Dependencies
        run: npm install --legacy-peer-deps

      - name: Download plugin dist
        uses: actions/download-artifact@v4
        with:
          name: bluehost-wordpress-plugin
          path: ./dist

      - name: Get Plugin dist directory
        id: dist
        run: echo "PLUGIN_DIR=$(find dist -mindepth 1 -maxdepth 1 -type d)" >> $GITHUB_OUTPUT
      
      - name: Debug plugin dir
        run: echo "Plugin directory is ${{ steps.dist.outputs.PLUGIN_DIR }}"

      - name: Configure WordPress
        run: |
          echo "{
            \"plugins\": [\"${{ steps.dist.outputs.PLUGIN_DIR }}\"]
          }" > .wp-env.override.json

      - name: Start WordPress
        uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3.0.2
        with:
          timeout_minutes: 4
          max_attempts: 3
          command: npx wp-env start --debug

      - name: Run Cypress Tests (Container ${{ matrix.container }})
        uses: cypress-io/github-action@v6
        with:
          record: true
          parallel: true
          group: 'parallel'
        env:
          # pass the Cypress Cloud record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Store screenshots of test failures
        if: ${{ failure() }}
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: screenshots-${{ matrix.container }}
          path: ./tests/cypress/screenshots

      - name: Output debug.log file contents
        if: ${{ always() }}
        continue-on-error: true
        run: npx wp-env run wordpress cat /var/www/html/wp-content/debug.log

      - name: Output wordpress docker logs
        if: always()
        continue-on-error: true
        run: |
          npx wp-env logs --watch=false --debug=true

name: E2E/Playwright Tests

on:
  push:
    branches:
      - 'main'
      - 'develop'
  pull_request:
    types: [ opened, synchronize, reopened, ready_for_review ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

# Disable permissions for all available scopes by default.
# Any needed permissions should be configured at the job level.
permissions: {}

jobs:
  build:
    name: Build Plugin
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Setup PHP
        uses: shivammathur/setup-php@bf6b4fbd49ca58e4608c9c89fba0b8d90bd2a39f # v2.35.5
        with:
          php-version: '8.1'
          coverage: none
          tools: composer, cs2pr

      - name: Setup workflow context
        id: workflow
        working-directory: ${{ runner.temp }}
        env:
          REPO: ${{ github.repository }}
        run: |
          mkdir dist
          echo "DIST=${PWD}/dist" >> "$GITHUB_OUTPUT"
          echo "PACKAGE=${REPO##*/}" >> "$GITHUB_OUTPUT"

      - name: Use Node.js 20.x
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> "$GITHUB_OUTPUT"

      - name: Cache Composer vendor directory
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Show versions
        run: |
          php --version
          composer --version
          node --version
          npm --version

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install PHP Dependencies
        run: composer install --no-progress --no-dev --optimize-autoloader --prefer-source

      - name: NPM Install
        run: npm install --legacy-peer-deps

      - name: Build JavaScript
        run: npm run build

      - name: Create Distribution Copy
        env:
          DIST: ${{ steps.workflow.outputs.DIST }}
          PACKAGE: ${{ steps.workflow.outputs.PACKAGE }}
        run: rsync -r --include-from=.distinclude --exclude-from=.distignore . "$DIST/$PACKAGE"

      - name: List Distribution Files
        working-directory: ${{ steps.workflow.outputs.DIST }}
        run: find .

      - name: Configure WordPress
        env:
          DIST: ${{ steps.workflow.outputs.DIST }}
          PACKAGE: ${{ steps.workflow.outputs.PACKAGE }}
        run: |
          jq -n \
            --arg plugin "$DIST/$PACKAGE" \
            '{plugins: [$plugin]}' > .wp-env.override.json

      - name: Upload build artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: plugin-build
          path: |
            ${{ steps.workflow.outputs.DIST }}
            .wp-env.override.json
          retention-days: 1

  test:
    name: Run Playwright Tests
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: build
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Setup PHP
        uses: shivammathur/setup-php@bf6b4fbd49ca58e4608c9c89fba0b8d90bd2a39f # v2.35.5
        with:
          php-version: '8.1'
          coverage: none
          tools: composer, cs2pr

      - name: Use Node.js 20.x
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> "$GITHUB_OUTPUT"

      - name: Cache Composer vendor directory
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Download build artifacts
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0  # v5.0.0
        with:
          name: plugin-build
          path: .

      - name: Install PHP Dependencies
        run: composer install --no-progress --no-dev --optimize-autoloader --prefer-source

      - name: Setup Registry
        run: printf "\n//npm.pkg.github.com/:_authToken=${{ secrets.NEWFOLD_ACCESS_TOKEN }}" >> .npmrc

      - name: NPM Install
        run: npm install --legacy-peer-deps

      - name: Install WordPress
        uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3.0.2
        with:
          timeout_minutes: 4
          max_attempts: 3
          command: npx wp-env start --debug

      - name: Run Playwright Tests
        run: npx playwright test --reporter=github

      - name: Store Playwright test results
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: playwright-report
          path: tests/playwright/test-results/
          retention-days: 7

      - name: Output debug.log file contents
        if: always()
        continue-on-error: true
        run: |
          npx wp-env run wordpress cat /var/www/html/wp-content/debug.log

      - name: Output wordpress docker logs
        if: always()
        continue-on-error: true
        run: |
          npx wp-env logs --watch=false --debug=true

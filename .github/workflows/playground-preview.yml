name: WordPress Playground Preview

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  issue_comment:
    types: [created, edited]

permissions: {}

env:
  BUILD_WORKFLOW_NAME: Build Plugin
  ARTIFACT_NAME_FALLBACK: bluehost-wordpress-plugin

jobs:
  deploy-preview:
    runs-on: ubuntu-latest

    if: github.event_name == 'pull_request' || (github.event_name == 'issue_comment' && github.event.issue.pull_request)

    permissions:
      contents: read
      actions: read
      pages: write
      id-token: write
      pull-requests: write

    concurrency:
      group: pages
      cancel-in-progress: true

    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Get PR number and metadata
        id: pr
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd  # v8.0.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pullRequests } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: `${context.repo.owner}:${github.event.workflow_run.head_branch}`
            });
            if (pullRequests.length === 0) {
              core.setFailed('No open PR found for this branch');
              return;
            }
            const pr = pullRequests[0];
            core.setOutput('number', pr.number);
            core.setOutput('branch', github.event.workflow_run.head_branch);
            core.setOutput('commit', github.event.workflow_run.head_sha.slice(0, 7));

      - name: Download artifact from workflow run
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
        with:
          name: ${{ vars.PLUGIN_NAME || 'bluehost-wordpress-plugin' }}
          path: ./artifact
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Prepare plugin zip for GitHub Pages
        id: prepare
        env:
          PR_NUMBER: ${{ steps.pr.outputs.number }}
        run: |
          set -euo pipefail

          mkdir -p gh-pages/previews

          PR_NUM="${PR_NUMBER}"
          ZIP_NAME="bluehost-pr-${PR_NUM}.zip"

          cd artifact
          zip -r -9 "../gh-pages/previews/${ZIP_NAME}" .
          cd ..

          SIZE=$(du -h "gh-pages/previews/${ZIP_NAME}" | cut -f1)

          echo "zip_name=${ZIP_NAME}" >> "$GITHUB_OUTPUT"
          echo "zip_size=${SIZE}" >> "$GITHUB_OUTPUT"

          cat > gh-pages/previews/index.html <<EOF
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="utf-8" />
            <title>Bluehost Plugin - Playground Previews</title>
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <style>
              body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif; max-width: 800px; margin: 40px auto; padding: 20px; }
              h1 { color: #333; }
              .preview { background: #f5f5f5; padding: 15px; margin: 10px 0; border-radius: 5px; }
              a { color: #0969da; text-decoration: none; }
              a:hover { text-decoration: underline; }
              code { background:#eee; padding:2px 6px; border-radius:4px; }
            </style>
          </head>
          <body>
            <h1>üéÆ WordPress Playground Previews</h1>
            <p>Preview builds of the Bluehost WordPress Plugin for testing in WordPress Playground.</p>
            <div class="preview">
              <p><strong>Latest:</strong> <a href="${ZIP_NAME}">${ZIP_NAME}</a> (${SIZE})</p>
            </div>
          </body>
          </html>
          EOF

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa  # v3.0.1
        with:
          path: ./gh-pages

      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e  # v4.0.5

      - name: Create WordPress Playground preview link
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd  # v8.0.0
        env:
          PR_NUMBER: ${{ steps.pr.outputs.number }}
          ZIP_NAME: ${{ steps.prepare.outputs.zip_name }}
          ZIP_SIZE: ${{ steps.prepare.outputs.zip_size }}
          COMMIT: ${{ steps.pr.outputs.commit }}
          BRANCH: ${{ steps.pr.outputs.branch }}
          PAGES_URL: ${{ steps.deploy.outputs.page_url }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = Number(process.env.PR_NUMBER);
            const zipName  = process.env.ZIP_NAME;
            const zipSize  = process.env.ZIP_SIZE;
            const commit   = process.env.COMMIT;
            const branch   = process.env.BRANCH;

            const base = process.env.PAGES_URL.replace(/\/+$/, '');
            const zipUrl = `${base}/previews/${zipName}`;

            const blueprint = {
              landingPage: "/wp-admin/admin.php?page=bluehost#/home",
              preferredVersions: { php: "8.1", wp: "latest" },
              login: true,
              steps: [
                {
                  step: "installPlugin",
                  pluginData: { resource: "url", url: zipUrl },
                  options: { activate: true }
                }
              ]
            };

            const blueprintBase64 = Buffer.from(JSON.stringify(blueprint)).toString('base64');
            const playgroundUrl = `https://playground.wordpress.net/#${blueprintBase64}`;

            const commentMeta = '<!-- playground-preview-link -->';
            const commentBody = `
            ${commentMeta}
            ## üéÆ WordPress Playground Preview

            [**‚ñ∂Ô∏è Launch Preview in Playground**](${playgroundUrl})

            _One-click testing in your browser! The plugin will be automatically installed and activated from this PR's latest build._

            ---

            **Preview Details:**
            - üì¶ Build: \`${zipName}\` (${zipSize})
            - üóÇÔ∏è Branch: \`${branch}\`
            - üìù Latest Commit: \`${commit}\`
            - üîó [Direct Download](${zipUrl})

            <details>
            <summary>‚ÑπÔ∏è About Playground Previews</summary>

            This preview runs your plugin in a complete WordPress environment directly in your browser using WordPress Playground. No local setup required!

            **Features:**
            - ‚úÖ PHP 8.1 & latest WordPress
            - ‚úÖ Plugin auto-installed & activated
            - ‚úÖ Lands on the Bluehost admin page
            - ‚úÖ Pre-authenticated as admin
            - ‚úÖ Session-persistent changes (in browser)
            </details>
            `;

            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            const existing = comments.find(c => c.body && c.body.includes(commentMeta));
            if (existing) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existing.id,
                body: commentBody,
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: commentBody,
              });
            }

            core.info(`Playground URL: ${playgroundUrl}`);

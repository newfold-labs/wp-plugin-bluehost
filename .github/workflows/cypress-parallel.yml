name: Parallel Cypress Tests
on:
  push:
    branches:
      - main
      - master
      - trunk
      - develop
      - release/*
      - feature/*
      - add/*
      - update/*
      - fix/*
      - try/*
  pull_request:
    types: [opened, edited, reopened, ready_for_review]
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true
permissions:
  pull-requests: write

jobs:
  build:
    name: Build Plugin
    runs-on: ubuntu-24.04
    outputs:
      dist: ${{ steps.workflow.outputs.DIST }}
      package: ${{ steps.workflow.outputs.PACKAGE }}
    steps:

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup PHP
        uses: shivammathur/setup-php@9e72090525849c5e82e596468b86eb55e9cc5401 # v2.32.0
        with:
          php-version: '8.1'
          coverage: none
          tools: composer

      - name: Setup Node.js
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: 20.x

      - name: Show versions
        run: |
          php --version
          composer --version
          node --version
          npm --version

      - name: Validate composer.json and composer.lock files
        run: composer validate

      - name: Install PHP Dependencies
        uses: ramsey/composer-install@a2636af0004d1c0499ffca16ac0b4cc94df70565 # v3.1.0
        with:
          composer-options: "--no-dev --optimize-autoloader --verbose"

      - name: Install JS Dependencies
        run: npm ci --legacy-peer-deps

      - name: Build JavaScript
        run: npm run build

      - name: Setup workflow context
        id: workflow
        working-directory: ${{ runner.temp }}
        env:
          REPO: ${{ github.repository }}
        run: |
          mkdir dist
          echo "DIST=${PWD}/dist" >> $GITHUB_OUTPUT
          echo "PACKAGE=bluehost-wordpress-plugin" >> $GITHUB_OUTPUT

      - name: Create Distribution Copy
        run: rsync -r --include-from=.distinclude --exclude-from=.distignore . ${{ steps.workflow.outputs.DIST }}/${{ steps.workflow.outputs.PACKAGE }}

      - name: List Distribution Files
        working-directory: ${{ steps.workflow.outputs.DIST }}
        run: find .

      - name: Upload distribution artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          path: ${{ steps.workflow.outputs.dist }}
          name: ${{ steps.workflow.outputs.package }}

  test:
    name: Test (${{ matrix.containers }})
    needs: build
    runs-on: ubuntu-24.04
    timeout-minutes: 20
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving Cypress Cloud hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run 4 parallel containers to speed up the tests
        # https://docs.cypress.io/guides/guides/parallelization#Parallelization
        containers: [1, 2, 3, 4]
    steps:

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup PHP
        uses: shivammathur/setup-php@9e72090525849c5e82e596468b86eb55e9cc5401 # v2.32.0
        with:
          php-version: '8.1'
          coverage: none
          tools: composer

      - name: Setup Node.js
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: 20.x

      - name: Show versions
        run: |
          php --version
          composer --version
          node --version
          npm --version

      - name: Validate composer.json and composer.lock files
        run: composer validate

      - name: Install PHP Dependencies
        uses: ramsey/composer-install@a2636af0004d1c0499ffca16ac0b4cc94df70565 # v3.1.0
        with:
          composer-options: "--no-dev --optimize-autoloader --verbose"

      - name: Install JS Dependencies
        run: npm ci --legacy-peer-deps

      - name: Setup workflow context
        id: workflow
        working-directory: ${{ runner.temp }}
        env:
          REPO: ${{ github.repository }}
        run: |
          mkdir dist
          echo "DIST=${PWD}/dist" >> $GITHUB_OUTPUT

      - name: Download plugin into dist directory
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          path: ${{ steps.workflow.outputs.DIST }}
          name: ${{ needs.build.outputs.PACKAGE }}

      - name: Configure WordPress
        run: echo '{"plugins":["${{ steps.workflow.outputs.DIST }}/${{ needs.build.outputs.PACKAGE }}"]}' > .wp-env.override.json

      - name: Start WordPress
        uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3.0.2
        with:
          timeout_minutes: 4
          max_attempts: 3
          command: npx wp-env start --debug

      - name: Run Cypress Tests (Container ${{ matrix.containers }})
        uses: cypress-io/github-action@0ee1130f05f69098ab5c560bd198fecf5a14d75b # v6.9.0
        with:
          record: true
          parallel: true
          group: parallel
          tag: bluehost
          # plugin tests, module tests, nested module tests
          # NOT onboarding tests - parallelization requires testIsolation
          # https://docs.cypress.io/guides/guides/parallelization#Test-isolation
          spec: |
            vendor/newfold-labs/**/tests/cypress/integration/**/*.cy.js
            vendor/newfold-labs/**/tests/cypress/integration/*.cy.js
            tests/cypress/integration/**/*.cy.js
            !vendor/newfold-labs/wp-module-onboarding/**/*.cy.js
        env:
          # pass the Cypress Cloud record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Store screenshots of test failures
        if: ${{ failure() }}
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          path: ./tests/cypress/screenshots
          name: ${{ needs.build.outputs.PACKAGE }}-${{ matrix.containers }}-screenshots

      - name: Output debug.log file contents
        if: ${{ always() }}
        continue-on-error: true
        run: npx wp-env run wordpress cat /var/www/html/wp-content/debug.log

      - name: Output wordpress docker logs
        if: always()
        continue-on-error: true
        run: |
          npx wp-env logs --watch=false --debug=true

  test-onboarding:
    name: Test (Onboarding)
    needs: build
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    strategy:
      fail-fast: false

    steps:

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup PHP
        uses: shivammathur/setup-php@9e72090525849c5e82e596468b86eb55e9cc5401 # v2.32.0
        with:
          php-version: '8.1'
          coverage: none
          tools: composer

      - name: Setup Node.js
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: 20.x

      - name: Show versions
        run: |
          php --version
          composer --version
          node --version
          npm --version

      - name: Validate composer.json and composer.lock files
        run: composer validate

      - name: Install PHP Dependencies
        uses: ramsey/composer-install@a2636af0004d1c0499ffca16ac0b4cc94df70565 # v3.1.0
        with:
          composer-options: "--no-dev --optimize-autoloader --verbose"

      - name: Install JS Dependencies
        run: npm ci --legacy-peer-deps

      - name: Setup workflow context
        id: workflow
        working-directory: ${{ runner.temp }}
        env:
          REPO: ${{ github.repository }}
        run: |
          mkdir dist
          echo "DIST=${PWD}/dist" >> $GITHUB_OUTPUT

      - name: Download plugin into dist directory
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          path: ${{ steps.workflow.outputs.DIST }}
          name: ${{ needs.build.outputs.PACKAGE }}

      - name: Configure WordPress
        run: echo '{"plugins":["${{ steps.workflow.outputs.DIST }}/${{ needs.build.outputs.PACKAGE }}"]}' > .wp-env.override.json

      - name: Start WordPress
        uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3.0.2
        with:
          timeout_minutes: 4
          max_attempts: 3
          command: npx wp-env start --debug

      - name: Run Cypress Tests (Onboarding only)
        uses: cypress-io/github-action@0ee1130f05f69098ab5c560bd198fecf5a14d75b # v6.9.0
        with:
          record: true
          parallel: false
          group: onboarding
          tag: bluehost
          # plugin tests, module tests, nested module tests
          # NOT onboarding tests - parallelization requires testIsolation
          # https://docs.cypress.io/guides/guides/parallelization#Test-isolation
          spec: |
            vendor/newfold-labs/wp-module-onboarding/**/*.cy.js
        env:
          # pass the Cypress Cloud record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Store screenshots of test failures
        if: ${{ failure() }}
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          path: ./tests/cypress/screenshots
          name: ${{ needs.build.outputs.PACKAGE }}-onboarding-screenshots

      - name: Output debug.log file contents
        if: ${{ always() }}
        continue-on-error: true
        run: npx wp-env run wordpress cat /var/www/html/wp-content/debug.log

      - name: Output wordpress docker logs
        if: always()
        continue-on-error: true
        run: |
          npx wp-env logs --watch=false --debug=true

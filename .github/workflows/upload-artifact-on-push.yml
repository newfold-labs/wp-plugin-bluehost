name: Build Plugin
on:
  push:
    branches:
      - 'main'
      - 'develop'
  pull_request:
    types: [ opened, synchronize, reopened, ready_for_review ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

# Disable permissions for all available scopes by default.
# Any needed permissions should be configured at the job level.
permissions: {}

jobs:
  build:
    name: On Push
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: ${{ github.repository == 'newfold-labs/wp-plugin-bluehost' }}
    steps:

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Validate version number
        if: ${{ (github.repository == 'newfold-labs/wp-plugin-bluehost') }}
        env:
          PLUGIN_NAME: ${{ vars.PLUGIN_NAME }}
        run: |
          pluginHeaderVersion=$(grep "Version:" "$PLUGIN_NAME.php" | grep -Eo "[0-9\.]*")
          pluginConstantVersion=$(grep "'BLUEHOST_PLUGIN_VERSION'" "$PLUGIN_NAME.php" | grep -Eo "[0-9\.]*")
          pluginPackageVersion=$(grep '"version"' package.json | grep -Eo "[0-9\.]*")
          echo "Plugin header version: $pluginHeaderVersion"
          echo "Plugin constant version: $pluginConstantVersion"
          echo "Plugin package version: $pluginPackageVersion"
          [[ "$pluginPackageVersion" == "$pluginHeaderVersion" ]] || exit 1
          [[ "$pluginPackageVersion" == "$pluginConstantVersion" ]] || exit 1

      - name: Setup PHP
        uses: shivammathur/setup-php@20529878ed81ef8e78ddf08b480401e6101a850f  # v2.35.3
        with:
          php-version: '8.1'
          coverage: none
          tools: composer, cs2pr

      - name: Setup workflow context
        id: workflow
        working-directory: ${{ runner.temp }}
        env:
          REPO: ${{ github.repository }}
          PLUGIN_NAME: ${{ vars.PLUGIN_NAME }}
        run: |
          mkdir dist
          echo "DIST=${PWD}/dist" >> "$GITHUB_OUTPUT"
          echo "PACKAGE=$PLUGIN_NAME" >> "$GITHUB_OUTPUT"

      - name: Use Node.js 20.x
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020  # v4.4.0
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> "$GITHUB_OUTPUT"

      - name: Cache Composer vendor directory
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809  # v4.2.4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Show versions
        run: |
          php --version
          composer --version
          node --version
          npm --version

      - name: Validate composer.json and composer.lock
        if: ${{ github.repository == 'newfold-labs/wp-plugin-bluehost' }}
        run: composer validate

      - name: Install PHP Dependencies
        run: composer install --no-progress --no-dev --optimize-autoloader --prefer-dist

      - name: NPM Install
        run: npm install --legacy-peer-deps

      - name: Build JavaScript
        run: npm run build

      - name: Prepare files
        env:
          DIST: ${{ steps.workflow.outputs.DIST }}
        run: rsync -r --include-from=.distinclude --exclude-from=.distignore . "$DIST"

      - name: List Files
        working-directory: ${{ steps.workflow.outputs.DIST }}
        run: find .

      - name: Upload artifact
        id: artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        with:
          name: ${{ steps.workflow.outputs.PACKAGE }}
          path: ${{ steps.workflow.outputs.DIST }}
          include-hidden-files: true

      - name: Comment on PR with download link
        if: github.event_name == 'pull_request' && github.actor != 'dependabot[bot]'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea  # v7.0.1
        continue-on-error: true
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request.number;
            const commentMeta = '<!-- plugin-artifact-download -->';
            const artifactUrl = '${{ steps.artifact.outputs.artifact-url }}';

            const commentBody = `
            ${commentMeta}
            ## Latest Plugin Build
            ⬇️ [_Download build artifact:_ \`${artifactUrl}\`](${artifactUrl})
            🗂️ _Built from:_ \`${context.payload.pull_request.head.ref}\`
            📦 _Commit:_ \`${context.payload.pull_request.head.sha.slice(0, 7)}\`
            📅 _Date:_ \`${new Date().toISOString()}\`
            🚀 Please download, test, and report any issues before merging. 🎉 This build includes the latest changes from this PR and was automatically generated by the GitHub Actions workflow. Any future commits will update this build.
            ⏳ _Note: Artifacts expire after ~90 days_
            `;

            const { data: comments } = await github.rest.issues.listComments({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            const existingComment = comments.find(c => c.body.includes(commentMeta));

            if (existingComment) {
              await github.rest.issues.updateComment({
                comment_id: existingComment.id,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: commentBody,
              });
            } else {
              await github.rest.issues.createComment({
                issue_number: prNumber,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: commentBody,
              });
            }
